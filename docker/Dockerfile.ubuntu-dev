# Ubuntu 24.04.2 LTS Development Environment
FROM ubuntu:24.04

# Avoid prompts from apt
ENV DEBIAN_FRONTEND=noninteractive

# Set locale
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8

# Install system dependencies and locales
RUN apt-get update && apt-get install -y \
    locales \
    && locale-gen en_US.UTF-8 \
    && update-locale LANG=en_US.UTF-8

# Install essential packages
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    build-essential \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    gnupg \
    lsb-release \
    sudo \
    zsh \
    stow \
    unzip \
    zip \
    tree \
    htop \
    vim \
    nano \
    && rm -rf /var/lib/apt/lists/*

# Create user
ARG USERNAME=developer
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME -s /bin/zsh \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

# Switch to user
USER $USERNAME
WORKDIR /home/$USERNAME

# Install Homebrew for Linux
RUN /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
ENV PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"

# Install modern CLI tools via Homebrew
RUN brew install \
    neovim \
    tmux \
    ripgrep \
    fd \
    bat \
    fzf \
    eza \
    git-delta \
    starship \
    zoxide \
    bottom \
    dust \
    duf \
    hyperfine \
    gping \
    procs \
    tealdeer \
    yazi

# Install Python development environment
RUN brew install python@3.12 python@3.11 python@3.10 \
    && brew install pyenv uv pipx \
    && pipx install black isort mypy poetry ruff

# Install Node.js via nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash \
    && export NVM_DIR="$HOME/.nvm" \
    && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" \
    && nvm install --lts \
    && nvm use --lts \
    && npm install -g prettier eslint typescript ts-node

# Install Java development environment
RUN brew install openjdk@21 openjdk@17 openjdk@11 maven gradle
RUN echo 'export PATH="/home/linuxbrew/.linuxbrew/opt/openjdk@21/bin:$PATH"' >> ~/.zshenv

# Install Go
RUN brew install go gopls

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \
    && echo 'source ~/.cargo/env' >> ~/.zshenv
ENV PATH="/home/$USERNAME/.cargo/bin:$PATH"

# Install C/C++ development tools
RUN sudo apt-get update && sudo apt-get install -y \
    gcc \
    g++ \
    clang \
    clang-format \
    clang-tidy \
    cmake \
    make \
    gdb \
    valgrind \
    && rm -rf /var/lib/apt/lists/*

# Install additional development tools
RUN brew install \
    jq \
    yq \
    httpie \
    gh \
    lazygit \
    gitui

# Copy dotfiles (if available)
COPY --chown=$USERNAME:$USERNAME . /home/$USERNAME/.dotfiles

# Install dotfiles if available
RUN if [ -d "/home/$USERNAME/.dotfiles" ]; then \
        cd /home/$USERNAME/.dotfiles && \
        ./scripts/stow.sh install system zsh git tools vim nvim tmux; \
    fi

# Install Zinit
RUN sh -c "$(curl -fsSL https://git.io/zinit-install)"

# Install Oh My Tmux
RUN git clone https://github.com/gpakosz/.tmux.git ~/.tmux \
    && ln -sf ~/.tmux/.tmux.conf ~/.tmux.conf \
    && cp ~/.tmux/.tmux.conf.local ~/.tmux.conf.local

# Set working directory
WORKDIR /workspace

# Default command
CMD ["zsh"]