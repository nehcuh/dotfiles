version: '3.8'

# Cross-platform development environment template
# Copy this file to docker-compose.yml and customize it for your needs

services:
  # Ubuntu development environment
  dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile.ubuntu-dev
      args:
        # Customize user settings
        USERNAME: ${DEV_USERNAME:-huchen}
        USER_UID: ${DEV_USER_UID:-1000}
        USER_GID: ${DEV_USER_GID:-1000}
    container_name: ${DEV_CONTAINER_NAME:-dev-environment}
    hostname: ${DEV_HOSTNAME:-ubuntu-dev}
    volumes:
      # Mount workspace
      - ${DEV_WORKSPACE_PATH:-../}:/workspace:cached
      # Mount home directory
      - ${DEV_HOME_MOUNT:-~/}:/home/${DEV_USERNAME:-huchen}/host-home:cached
      # Mount SSH keys (read-only)
      - ${DEV_SSH_PATH:-~/.ssh}:/home/${DEV_USERNAME:-huchen}/.ssh:ro
      # Mount git config (read-only)
      - ${DEV_GIT_CONFIG:-~/.gitconfig}:/home/${DEV_USERNAME:-huchen}/.gitconfig:ro
      # Persistent home directory
      - ${DEV_VOLUME_NAME:-dev-home}:/home/${DEV_USERNAME:-huchen}
      # Mount Docker socket if available
      - ${DEV_DOCKER_SOCKET:-/var/run/docker.sock}:/var/run/docker.sock
    ports:
      # Common development ports
      - "${DEV_PORT_REACT:-3000}:3000"   # React/Next.js
      - "${DEV_PORT_DJANGO:-8000}:8000"   # Django/FastAPI
      - "${DEV_PORT_SPRING:-8080}:8080"   # Spring Boot
      - "${DEV_PORT_FLASK:-5000}:5000"   # Flask
      - "${DEV_PORT_JEKYLL:-4000}:4000"   # Jekyll
      - "${DEV_PORT_MISC:-9000}:9000"   # Various services
      # Add more ports as needed
      # - "8888:8888"  # Jupyter
      # - "6006:6006"  # TensorBoard
    environment:
      - TERM=xterm-256color
      - COLORTERM=truecolor
      # Python environment
      - PYTHONPATH=/workspace
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      # Node.js environment
      - NODE_ENV=development
      # Java environment
      - JAVA_HOME=/home/linuxbrew/.linuxbrew/opt/openjdk@21
      # Add more environment variables as needed
      # - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      # - REDIS_URL=redis://redis:6379/0
    stdin_open: true
    tty: true
    command: zsh
    networks:
      - dev-network
    # Uncomment to enable GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Database service (PostgreSQL)
  # Uncomment to enable
  # db:
  #   image: postgres:16-alpine
  #   container_name: ${DB_CONTAINER_NAME:-dev-postgres}
  #   environment:
  #     - POSTGRES_USER=${DB_USER:-postgres}
  #     - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
  #     - POSTGRES_DB=${DB_NAME:-postgres}
  #   volumes:
  #     - ${DB_VOLUME_NAME:-postgres-data}:/var/lib/postgresql/data
  #   ports:
  #     - "${DB_PORT:-5432}:5432"
  #   networks:
  #     - dev-network

  # Redis service
  # Uncomment to enable
  # redis:
  #   image: redis:alpine
  #   container_name: ${REDIS_CONTAINER_NAME:-dev-redis}
  #   ports:
  #     - "${REDIS_PORT:-6379}:6379"
  #   volumes:
  #     - ${REDIS_VOLUME_NAME:-redis-data}:/data
  #   networks:
  #     - dev-network

  # MongoDB service
  # Uncomment to enable
  # mongo:
  #   image: mongo:latest
  #   container_name: ${MONGO_CONTAINER_NAME:-dev-mongo}
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-mongo}
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-mongo}
  #   volumes:
  #     - ${MONGO_VOLUME_NAME:-mongo-data}:/data/db
  #   ports:
  #     - "${MONGO_PORT:-27017}:27017"
  #   networks:
  #     - dev-network

  # MySQL service
  # Uncomment to enable
  # mysql:
  #   image: mysql:8
  #   container_name: ${MYSQL_CONTAINER_NAME:-dev-mysql}
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-mysql}
  #     - MYSQL_DATABASE=${MYSQL_DATABASE:-mysql}
  #     - MYSQL_USER=${MYSQL_USER:-mysql}
  #     - MYSQL_PASSWORD=${MYSQL_PASSWORD:-mysql}
  #   volumes:
  #     - ${MYSQL_VOLUME_NAME:-mysql-data}:/var/lib/mysql
  #   ports:
  #     - "${MYSQL_PORT:-3306}:3306"
  #   networks:
  #     - dev-network

networks:
  dev-network:
    driver: bridge

volumes:
  # Persistent home directory
  dev-home:
    driver: local
  # Database volumes
  # postgres-data:
  #   driver: local
  # redis-data:
  #   driver: local
  # mongo-data:
  #   driver: local
  # mysql-data:
  #   driver: local