#!/bin/sh
# Pre-installation hook
# This script runs before the installation process
# Copy this file to pre-install.sh and customize it

# Source common library if available
if [ -f "../scripts/lib/common.sh" ]; then
  # shellcheck disable=SC1091
  . "../scripts/lib/common.sh"
else
  # Define minimal logging functions if common.sh is not available
  log_info() {
    echo "[INFO] $1"
  }
  
  log_success() {
    echo "[SUCCESS] $1"
  }
  
  log_warning() {
    echo "[WARNING] $1"
  }
  
  log_error() {
    echo "[ERROR] $1" >&2
  }
fi

log_info "Running pre-installation hook..."

# Add your custom pre-installation commands here
# For example:
# - Check for required dependencies
# - Backup existing configuration
# - Set up environment variables
# - Download additional resources

# Example: Check for required dependencies
# for cmd in git curl wget zsh; do
#   if ! command -v "$cmd" >/dev/null 2>&1; then
#     log_warning "$cmd is not installed"
#   else
#     log_success "$cmd is installed"
#   fi
# done

# Example: Backup existing configuration
# backup_dir="$HOME/.dotfiles-backup-$(date +%Y%m%d-%H%M%S)"
# mkdir -p "$backup_dir"
# for file in "$HOME/.zshrc" "$HOME/.gitconfig" "$HOME/.tmux.conf" "$HOME/.vimrc"; do
#   if [ -f "$file" ] && [ ! -L "$file" ]; then
#     cp "$file" "$backup_dir/"
#     log_success "Backed up $(basename "$file")"
#   fi
# done

# Example: Set up environment variables
# export CUSTOM_VAR="custom_value"

# Example: Download additional resources
# if ! curl -fsSL "https://example.com/resource" -o "/tmp/resource"; then
#   log_error "Failed to download resource"
# else
#   log_success "Downloaded resource"
# fi

log_success "Pre-installation hook completed"